{"ast":null,"code":"var _jsxFileName = \"/Users/tsutsuguchifumihiko/apprentice/quest_react/quest/05_state_and_event/src/020_useState/start/Example.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\n\n//eventLisnerの練習\n// const Example = () => {\n//   let [val, setVal] = useState();\n//   return (\n//     <>\n//       <input\n//       type=\"text\"\n//       onChange={(e) => {\n//         setVal(e.target.value)\n//       }} /> = {val}\n//     </>\n//   );\n// };\n\n// export default Example;\n\n//[QUEST10]1. state の追加\n// const CounterApp = () => {\n//   let stateAndSetter = useState(0);\n//   const count = stateAndSetter[0]; // 現在の状態\n//   const setCount = stateAndSetter[1]; // 更新関数\n//   return (\n//     <>\n//       <div>\n//         <h2>カウンターアプリ</h2>\n//         <h1>カウンター: {count}</h1>\n//         <button\n//           type=\"button\"\n//           onClick={() => setCount(prevCount => prevCount + 1)}\n//         >増加</button>\n//         <button\n//           type=\"button\"\n//           onClick={() => setCount(prevCount => prevCount - 1)}\n//         >減少</button>\n//       </div>\n//     </>\n//   );\n// };\n// export default CounterApp;\n\n// [QUEST10]4. \nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Example = () => {\n  _s();\n  const [count, setCount] = useState(0);\n  const countUp = () => {\n    setCount(count + 1);\n    setCount(prevState => prevState + 1);\n    console.log(count);\n  };\n  const countDown = () => {\n    setCount(count - 1);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u73FE\\u5728\\u306E\\u30AB\\u30A6\\u30F3\\u30C8\\u6570\\uFF1A\", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: countUp,\n      children: \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: countDown,\n      children: \"-\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Example, \"oDgYfYHkD9Wkv4hrAPCkI/ev3YU=\");\n_c = Example;\nexport default Example;\nvar _c;\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Example","_s","count","setCount","countUp","prevState","console","log","countDown","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/tsutsuguchifumihiko/apprentice/quest_react/quest/05_state_and_event/src/020_useState/start/Example.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\n//eventLisnerの練習\r\n// const Example = () => {\r\n//   let [val, setVal] = useState();\r\n//   return (\r\n//     <>\r\n//       <input\r\n//       type=\"text\"\r\n//       onChange={(e) => {\r\n//         setVal(e.target.value)\r\n//       }} /> = {val}\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Example;\r\n\r\n//[QUEST10]1. state の追加\r\n// const CounterApp = () => {\r\n//   let stateAndSetter = useState(0);\r\n//   const count = stateAndSetter[0]; // 現在の状態\r\n//   const setCount = stateAndSetter[1]; // 更新関数\r\n//   return (\r\n//     <>\r\n//       <div>\r\n//         <h2>カウンターアプリ</h2>\r\n//         <h1>カウンター: {count}</h1>\r\n//         <button\r\n//           type=\"button\"\r\n//           onClick={() => setCount(prevCount => prevCount + 1)}\r\n//         >増加</button>\r\n//         <button\r\n//           type=\"button\"\r\n//           onClick={() => setCount(prevCount => prevCount - 1)}\r\n//         >減少</button>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// };\r\n// export default CounterApp;\r\n\r\n// [QUEST10]4. \r\nconst Example = () => {\r\n  const [count, setCount] = useState(0);\r\n  const countUp = () => {\r\n    setCount(count + 1);\r\n    setCount(prevState => prevState + 1);\r\n    console.log(count);\r\n  }\r\n  const countDown = () => {\r\n    setCount(count - 1);\r\n  }\r\n  return (\r\n    <>\r\n      <p>現在のカウント数：{count}</p>\r\n      <button\r\n      onClick={countUp}\r\n      >+</button>\r\n      <button\r\n      onClick={countDown}\r\n      >-</button>\r\n    </>\r\n  );\r\n}\r\nexport default Example;"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AACA,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAMS,OAAO,GAAGA,CAAA,KAAM;IACpBD,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACnBC,QAAQ,CAACE,SAAS,IAAIA,SAAS,GAAG,CAAC,CAAC;IACpCC,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;EACpB,CAAC;EACD,MAAMM,SAAS,GAAGA,CAAA,KAAM;IACtBL,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;EACrB,CAAC;EACD,oBACEL,OAAA,CAAAE,SAAA;IAAAU,QAAA,gBACEZ,OAAA;MAAAY,QAAA,GAAG,wDAAS,EAACP,KAAK;IAAA;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBhB,OAAA;MACAiB,OAAO,EAAEV,OAAQ;MAAAK,QAAA,EAChB;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACXhB,OAAA;MACAiB,OAAO,EAAEN,SAAU;MAAAC,QAAA,EAClB;IAAC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACX,CAAC;AAEP,CAAC;AAAAZ,EAAA,CArBKD,OAAO;AAAAe,EAAA,GAAPf,OAAO;AAsBb,eAAeA,OAAO;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}