{"ast":null,"code":"var _jsxFileName = \"/Users/tsutsuguchifumihiko/apprentice/quest_react/quest/05_state_and_event/src/020_useState/start/Example.js\",\n  _s = $RefreshSig$();\nimport { useState } from \"react\";\n\n//eventLisnerの練習\n// const Example = () => {\n//   let [val, setVal] = useState();\n//   return (\n//     <>\n//       <input\n//       type=\"text\"\n//       onChange={(e) => {\n//         setVal(e.target.value)\n//       }} /> = {val}\n//     </>\n//   );\n// };\n\n// export default Example;\n\n//[QUEST10]1. state の追加\n// const CounterApp = () => {\n//   let stateAndSetter = useState(0);\n//   const count = stateAndSetter[0]; // 現在の状態\n//   const setCount = stateAndSetter[1]; // 更新関数\n//   return (\n//     <>\n//       <div>\n//         <h2>カウンターアプリ</h2>\n//         <h1>カウンター: {count}</h1>\n//         <button\n//           type=\"button\"\n//           onClick={() => setCount(prevCount => prevCount + 1)}\n//         >増加</button>\n//         <button\n//           type=\"button\"\n//           onClick={() => setCount(prevCount => prevCount - 1)}\n//         >減少</button>\n//       </div>\n//     </>\n//   );\n// };\n// export default CounterApp;\n\n// [QUEST10]4. 複数回のstateの更新をキューに入れる\n// const Example = () => {\n//   const [count, setCount] = useState(0);\n//   const countUp = () => {\n//     setCount(count + 1);\n//     setCount(prevState => prevState + 1);\n//     console.log(count);\n//   }\n//   const countDown = () => {\n//     setCount(count - 1);\n//   }\n//   return (\n//     <>\n//       <p>現在のカウント数：{count}</p>\n//       <button\n//       onClick={countUp}\n//       >+</button>\n//       <button\n//       onClick={countDown}\n//       >-</button>\n//     </>\n//   );\n// }\n// export default Example;\n\n// [QUEST10]5. state内のオブジェクトの更新\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UserInfoApp() {\n  _s();\n  const [userInfo, setUserInfo] = useState({\n    name: '大介',\n    age: 25\n  });\n  console.log(userInfo);\n  function updateName() {\n    // これはReactのベストプラクティスに反する更新方法\n    userInfo.name = '太一';\n    console.log(userInfo.name);\n    setUserInfo({\n      name: '太一',\n      age: 25\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u60C5\\u5831\\u30A2\\u30D7\\u30EA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u540D\\u524D: \", userInfo.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\u5E74\\u9F62: \", userInfo.age]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: updateName,\n      children: \"\\u540D\\u524D\\u3092\\u592A\\u4E00\\u306B\\u5909\\u66F4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n_s(UserInfoApp, \"AQcRuc1lgbN9UMFowxWM5t6OvJQ=\");\n_c = UserInfoApp;\nvar _c;\n$RefreshReg$(_c, \"UserInfoApp\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","UserInfoApp","_s","userInfo","setUserInfo","name","age","console","log","updateName","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/tsutsuguchifumihiko/apprentice/quest_react/quest/05_state_and_event/src/020_useState/start/Example.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\n//eventLisnerの練習\r\n// const Example = () => {\r\n//   let [val, setVal] = useState();\r\n//   return (\r\n//     <>\r\n//       <input\r\n//       type=\"text\"\r\n//       onChange={(e) => {\r\n//         setVal(e.target.value)\r\n//       }} /> = {val}\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Example;\r\n\r\n//[QUEST10]1. state の追加\r\n// const CounterApp = () => {\r\n//   let stateAndSetter = useState(0);\r\n//   const count = stateAndSetter[0]; // 現在の状態\r\n//   const setCount = stateAndSetter[1]; // 更新関数\r\n//   return (\r\n//     <>\r\n//       <div>\r\n//         <h2>カウンターアプリ</h2>\r\n//         <h1>カウンター: {count}</h1>\r\n//         <button\r\n//           type=\"button\"\r\n//           onClick={() => setCount(prevCount => prevCount + 1)}\r\n//         >増加</button>\r\n//         <button\r\n//           type=\"button\"\r\n//           onClick={() => setCount(prevCount => prevCount - 1)}\r\n//         >減少</button>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// };\r\n// export default CounterApp;\r\n\r\n// [QUEST10]4. 複数回のstateの更新をキューに入れる\r\n// const Example = () => {\r\n//   const [count, setCount] = useState(0);\r\n//   const countUp = () => {\r\n//     setCount(count + 1);\r\n//     setCount(prevState => prevState + 1);\r\n//     console.log(count);\r\n//   }\r\n//   const countDown = () => {\r\n//     setCount(count - 1);\r\n//   }\r\n//   return (\r\n//     <>\r\n//       <p>現在のカウント数：{count}</p>\r\n//       <button\r\n//       onClick={countUp}\r\n//       >+</button>\r\n//       <button\r\n//       onClick={countDown}\r\n//       >-</button>\r\n//     </>\r\n//   );\r\n// }\r\n// export default Example;\r\n\r\n// [QUEST10]5. state内のオブジェクトの更新\r\n\r\nexport default function UserInfoApp() {\r\n  const [userInfo, setUserInfo] = useState({ name: '大介', age: 25 });\r\n\r\n  console.log(userInfo);\r\n\r\n  function updateName() {\r\n    // これはReactのベストプラクティスに反する更新方法\r\n    userInfo.name = '太一';\r\n    console.log(userInfo.name);\r\n    setUserInfo({name: '太一', age: 25});\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>ユーザー情報アプリ</h2>\r\n      <p>名前: {userInfo.name}</p>\r\n      <p>年齢: {userInfo.age}</p>\r\n      <button onClick={updateName}>名前を太一に変更</button>\r\n    </div>\r\n  );\r\n}"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,eAAe,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACpC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC;IAAEO,IAAI,EAAE,IAAI;IAAEC,GAAG,EAAE;EAAG,CAAC,CAAC;EAEjEC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;EAErB,SAASM,UAAUA,CAAA,EAAG;IACpB;IACAN,QAAQ,CAACE,IAAI,GAAG,IAAI;IACpBE,OAAO,CAACC,GAAG,CAACL,QAAQ,CAACE,IAAI,CAAC;IAC1BD,WAAW,CAAC;MAACC,IAAI,EAAE,IAAI;MAAEC,GAAG,EAAE;IAAE,CAAC,CAAC;EACpC;EAEA,oBACEN,OAAA;IAAAU,QAAA,gBACEV,OAAA;MAAAU,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBd,OAAA;MAAAU,QAAA,GAAG,gBAAI,EAACP,QAAQ,CAACE,IAAI;IAAA;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1Bd,OAAA;MAAAU,QAAA,GAAG,gBAAI,EAACP,QAAQ,CAACG,GAAG;IAAA;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBd,OAAA;MAAQe,OAAO,EAAEN,UAAW;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC3C,CAAC;AAEV;AAACZ,EAAA,CApBuBD,WAAW;AAAAe,EAAA,GAAXf,WAAW;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}