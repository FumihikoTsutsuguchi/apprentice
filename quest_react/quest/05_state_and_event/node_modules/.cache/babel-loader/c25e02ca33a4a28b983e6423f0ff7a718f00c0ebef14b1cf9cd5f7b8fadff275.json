{"ast":null,"code":"import { useState } from \"react\";\n\n//eventLisnerの練習\n// const Example = () => {\n//   let [val, setVal] = useState();\n//   return (\n//     <>\n//       <input\n//       type=\"text\"\n//       onChange={(e) => {\n//         setVal(e.target.value)\n//       }} /> = {val}\n//     </>\n//   );\n// };\n\n// export default Example;\n\n//[QUEST10]1. state の追加\n// const CounterApp = () => {\n//   let stateAndSetter = useState(0);\n//   const count = stateAndSetter[0]; // 現在の状態\n//   const setCount = stateAndSetter[1]; // 更新関数\n//   return (\n//     <>\n//       <div>\n//         <h2>カウンターアプリ</h2>\n//         <h1>カウンター: {count}</h1>\n//         <button\n//           type=\"button\"\n//           onClick={() => setCount(prevCount => prevCount + 1)}\n//         >増加</button>\n//         <button\n//           type=\"button\"\n//           onClick={() => setCount(prevCount => prevCount - 1)}\n//         >減少</button>\n//       </div>\n//     </>\n//   );\n// };\n// export default CounterApp;\n\n// [QUEST10]4. 複数回のstateの更新をキューに入れる\n// const Example = () => {\n//   const [count, setCount] = useState(0);\n//   const countUp = () => {\n//     setCount(count + 1);\n//     setCount(prevState => prevState + 1);\n//     console.log(count);\n//   }\n//   const countDown = () => {\n//     setCount(count - 1);\n//   }\n//   return (\n//     <>\n//       <p>現在のカウント数：{count}</p>\n//       <button\n//       onClick={countUp}\n//       >+</button>\n//       <button\n//       onClick={countDown}\n//       >-</button>\n//     </>\n//   );\n// }\n// export default Example;","map":{"version":3,"names":["useState"],"sources":["/Users/tsutsuguchifumihiko/apprentice/quest_react/quest/05_state_and_event/src/020_useState/start/Example.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\n//eventLisnerの練習\r\n// const Example = () => {\r\n//   let [val, setVal] = useState();\r\n//   return (\r\n//     <>\r\n//       <input\r\n//       type=\"text\"\r\n//       onChange={(e) => {\r\n//         setVal(e.target.value)\r\n//       }} /> = {val}\r\n//     </>\r\n//   );\r\n// };\r\n\r\n// export default Example;\r\n\r\n//[QUEST10]1. state の追加\r\n// const CounterApp = () => {\r\n//   let stateAndSetter = useState(0);\r\n//   const count = stateAndSetter[0]; // 現在の状態\r\n//   const setCount = stateAndSetter[1]; // 更新関数\r\n//   return (\r\n//     <>\r\n//       <div>\r\n//         <h2>カウンターアプリ</h2>\r\n//         <h1>カウンター: {count}</h1>\r\n//         <button\r\n//           type=\"button\"\r\n//           onClick={() => setCount(prevCount => prevCount + 1)}\r\n//         >増加</button>\r\n//         <button\r\n//           type=\"button\"\r\n//           onClick={() => setCount(prevCount => prevCount - 1)}\r\n//         >減少</button>\r\n//       </div>\r\n//     </>\r\n//   );\r\n// };\r\n// export default CounterApp;\r\n\r\n// [QUEST10]4. 複数回のstateの更新をキューに入れる\r\n// const Example = () => {\r\n//   const [count, setCount] = useState(0);\r\n//   const countUp = () => {\r\n//     setCount(count + 1);\r\n//     setCount(prevState => prevState + 1);\r\n//     console.log(count);\r\n//   }\r\n//   const countDown = () => {\r\n//     setCount(count - 1);\r\n//   }\r\n//   return (\r\n//     <>\r\n//       <p>現在のカウント数：{count}</p>\r\n//       <button\r\n//       onClick={countUp}\r\n//       >+</button>\r\n//       <button\r\n//       onClick={countDown}\r\n//       >-</button>\r\n//     </>\r\n//   );\r\n// }\r\n// export default Example;"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,OAAO;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}